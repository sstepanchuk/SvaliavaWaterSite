# --- Stage 1: Cargo chef planner ---
FROM rust:bookworm as chef
WORKDIR /app
RUN cargo install cargo-chef
COPY . .
# Generate a recipe file that describes the project's dependencies
RUN cargo chef prepare --recipe-path recipe.json

# --- Stage 2: Dependency build (caching) ---
FROM rust:bookworm as builder-deps
WORKDIR /app
RUN cargo install cargo-chef
COPY --from=chef /app/recipe.json recipe.json
# Build dependencies separately to leverage Docker layer caching
RUN cargo chef cook --release --recipe-path recipe.json

# --- Stage 3: Final build ---
FROM rust:bookworm as builder
WORKDIR /app

# Install cargo-binstall for easier cargo extension installations
RUN wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz \
  && tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz \
  && cp cargo-binstall /usr/local/cargo/bin

# Install cargo-leptos for building the Leptos project
RUN cargo binstall cargo-leptos -y

# Add the WASM target required by Leptos
RUN rustup target add wasm32-unknown-unknown

# Copy cached dependencies from the previous stage
COPY --from=builder-deps /app/ /app/
# Copy the rest of the project files
COPY . .

# Build the application using cargo-leptos
RUN cargo leptos build --release -vv

# --- Stage 4: Runtime ---
FROM debian:bookworm-slim as runtime
WORKDIR /app

# Install runtime dependencies and clean up to reduce image size
RUN apt-get update -y \
  && apt-get install -y --no-install-recommends openssl ca-certificates \
  && apt-get autoremove -y \
  && apt-get clean -y \
  && rm -rf /var/lib/apt/lists/*

# Copy the server binary from the builder stage
COPY --from=builder /app/target/release/server /app/
# Copy static assets generated by Leptos
COPY --from=builder /app/target/site /app/site
# Copy configuration files if needed at runtime
COPY --from=builder /app/Cargo.toml /app/
COPY --from=builder /app/.env /app/

# Set environment variables required by the application
ENV RUST_LOG="info"
ENV LEPTOS_SITE_ADDR="0.0.0.0:3000"
ENV LEPTOS_SITE_ROOT="site"

# Expose ports used by the application
EXPOSE 3000
EXPOSE 3443

# Start the application
CMD ["/app/server"]
  